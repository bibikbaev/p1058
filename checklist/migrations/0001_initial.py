# Generated by Django 3.1.4 on 2022-11-03 17:27

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('case', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Checklists',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filled', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата и время заполнения')),
                ('udk_index', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Индекс УДК по ГОСТ 7.90')),
                ('russ_class', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Коды Высших квалификационных группировок Общероссийского классификатора продукции')),
                ('numbers_report_ident', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Номера, идентифицирующие отчет')),
                ('report_type', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Вид отчета')),
                ('nir_maker', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Фамилии и инициалы исполнителей НИР')),
                ('maker_post', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Должности исполнителей НИР')),
                ('maker_degree', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Ученые степени исполнителей НИР')),
                ('maker_title', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Ученые звания исполнителей НИР')),
                ('report_place', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Место составления отчета')),
                ('report_date', models.DateField(blank=True, null=True, verbose_name='Дата составления отчета')),
                ('page_count', models.IntegerField(blank=True, null=True, verbose_name='Количество страниц')),
                ('application_count', models.IntegerField(blank=True, null=True, verbose_name='Количество приложений')),
                ('source_count', models.IntegerField(blank=True, null=True, verbose_name='Количество использованных источников')),
                ('key_words', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Перечень ключевых слов')),
                ('has_title_page', models.BooleanField(blank=True, null=True, verbose_name='Есть титульная страница')),
                ('has_performers', models.BooleanField(blank=True, null=True, verbose_name='Есть список исполнителей')),
                ('title_page_is_first', models.BooleanField(blank=True, null=True, verbose_name='Титульная страница первая')),
                ('has_introduction', models.BooleanField(blank=True, null=True, verbose_name='Есть введение')),
                ('has_main_part', models.BooleanField(blank=True, null=True, verbose_name='Есть основная часть')),
                ('has_conclusion', models.BooleanField(blank=True, null=True, verbose_name='Есть заключение')),
                ('has_application', models.BooleanField(blank=True, null=True, verbose_name='Есть приложения')),
                ('has_purpose', models.BooleanField(blank=True, null=True, verbose_name='Есть цель')),
                ('has_content', models.BooleanField(blank=True, null=True, verbose_name='Есть содержание')),
                ('has_sources', models.BooleanField(blank=True, null=True, verbose_name='Есть список источников')),
                ('section_analyze', models.CharField(blank=True, max_length=500, null=True, verbose_name='Определенный по анализу раздел')),
                ('user_has_title_page', models.BooleanField(blank=True, null=True, verbose_name='Есть титульная страница по мнению автора')),
                ('user_has_performers', models.BooleanField(blank=True, null=True, verbose_name='Есть список исполнителей по мнению автора')),
                ('user_title_page_is_first', models.BooleanField(blank=True, null=True, verbose_name='Титульная страница первая по мнению автора')),
                ('user_has_introduction', models.BooleanField(blank=True, null=True, verbose_name='Есть введение по мнению автора')),
                ('user_has_main_part', models.BooleanField(blank=True, null=True, verbose_name='Есть основная часть по мнению автора')),
                ('user_has_conclusion', models.BooleanField(blank=True, null=True, verbose_name='Есть заключение по мнению автора')),
                ('user_has_application', models.BooleanField(blank=True, null=True, verbose_name='Есть приложения по мнению автора')),
                ('user_has_purpose', models.BooleanField(blank=True, null=True, verbose_name='Есть цель по мнению автора')),
                ('user_has_content', models.BooleanField(blank=True, null=True, verbose_name='Есть содержание по мнению автора')),
                ('user_has_sources', models.BooleanField(blank=True, null=True, verbose_name='Есть список источников по мнению автора')),
                ('is_gost', models.BooleanField(blank=True, default=False, null=True, verbose_name='Отчет и документы по ГОСТУ')),
                ('is_first', models.BooleanField(blank=True, default=False, null=True, verbose_name='работы являются впервые разработанными')),
                ('is_unique', models.BooleanField(blank=True, default=False, null=True, verbose_name='работы направлены на создание нового уникального продукта')),
                ('exp_desc', models.BooleanField(blank=True, default=False, null=True, verbose_name='отсутствовал опыт решения аналогичных задач')),
                ('contain_unique', models.BooleanField(blank=True, default=False, null=True, verbose_name='работы содержат в качестве предмета или объекта труда уникальные инновационные инструменты')),
                ('contain_experiment', models.BooleanField(blank=True, default=False, null=True, verbose_name='работы содержат в себе признаки экспериментальных разработок ')),
                ('efficient_nec', models.BooleanField(blank=True, default=False, null=True, verbose_name='работы не обусловлены необходимостью повышения эффективности операционной деятельности телекоммуникационных компаний')),
                ('integration', models.BooleanField(blank=True, default=False, null=True, verbose_name='работы не характерны для типового внедренческого проекта по системной интеграции существующих решений')),
                ('risk', models.BooleanField(blank=True, default=False, null=True, verbose_name='работы имели высокие проектные и технологические риски')),
                ('used', models.BooleanField(blank=True, default=False, null=True, verbose_name='примененные решения не основаны на общеизвестных способах')),
                ('union', models.BooleanField(blank=True, default=False, null=True, verbose_name='работы не являются объединением общеизвестных технологий и алгоритмов')),
                ('modification', models.BooleanField(blank=True, default=False, null=True, verbose_name='не осуществлялась настройка/ доработка/ модификация ранее известных технологий')),
                ('analog', models.BooleanField(blank=True, default=False, null=True, verbose_name='не существуют общедоступные аналоги')),
                ('new_knowledge', models.BooleanField(blank=True, default=False, null=True, verbose_name='не являются решением технических или инженерных задач по адаптации решения для работы в виртуальной среде')),
                ('report_diagram', models.ImageField(blank=True, null=True, upload_to='documents/%Y/%m/%d/', verbose_name='Гистограмма')),
                ('adopted', models.BooleanField(blank=True, default=False, null=True, verbose_name='Работа принята')),
                ('comment', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Комментарий')),
                ('case', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='case_checklist', to='case.cases', verbose_name='Экспертиза')),
                ('declaration', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='checklist_declaration', to='case.documents', verbose_name='Декларация')),
                ('report', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='checklist_report', to='case.documents', verbose_name='Отчёт')),
                ('specification', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='checklist_specification', to='case.documents', verbose_name='Техническое задание')),
            ],
            options={
                'verbose_name': 'Чек-лист',
                'verbose_name_plural': 'Чек-листы',
            },
        ),
        migrations.CreateModel(
            name='ChecklistStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Статус чек-листа',
                'verbose_name_plural': 'Статусы чек-листов',
            },
        ),
        migrations.CreateModel(
            name='MistakeTypes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Название недочёта')),
                ('description', models.CharField(max_length=500, verbose_name='Описание')),
                ('correction', models.CharField(max_length=500, verbose_name='Возможное исправление')),
            ],
            options={
                'verbose_name': 'Тип недочёта',
                'verbose_name_plural': 'Типы недочётов',
            },
        ),
        migrations.CreateModel(
            name='Mistakes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('checklist', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='checklist.checklists', verbose_name='Чек-лист')),
                ('mistake', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='checklist.mistaketypes', verbose_name='Недочёт')),
            ],
            options={
                'verbose_name': 'Недочёт',
                'verbose_name_plural': 'Недочёты',
            },
        ),
        migrations.AddField(
            model_name='checklists',
            name='status',
            field=models.ForeignKey(blank=True, default=1, null=True, on_delete=django.db.models.deletion.PROTECT, to='checklist.checkliststatus', verbose_name='Этап обработки'),
        ),
    ]
